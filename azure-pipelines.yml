--- 
  pool: 
    demands: 
      - npm
    vmImage: ubuntu-18.04
  steps: 
    - 
      displayName: "Use .NET Core SDK $(dotnetSdkVersion)"
      inputs: 
        version: $(dotnetSdkVersion)
      task: UseDotNet@2
    - 
      displayName: "Run npm install"
      inputs: 
        verbose: false
      task: Npm@1
    - 
      displayName: "Compile Sass assets"
      script: "./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)"
    - 
      displayName: "Run gulp tasks"
      task: gulp@1
    - 
      displayName: "Write build info"
      script: "echo \"$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)\" > buildinfo.txt"
      workingDirectory: $(wwwrootDir)
    - 
      displayName: "Restore project dependencies"
      inputs: 
        command: restore
        projects: "**/*.csproj"
      task: DotNetCoreCLI@2
    - 
      displayName: "Build the project - $(buildConfiguration)"
      inputs: 
        arguments: "--no-restore --configuration $(buildConfiguration)"
        command: build
        projects: "**/*.csproj"
      task: DotNetCoreCLI@2
    - 
      displayName: "Run unit tests - $(buildConfiguration)"
      inputs: 
        arguments: "--no-build --configuration $(buildConfiguration)"
        command: test
        projects: "**/*.Tests.csproj"
        publishTestResults: true
      task: DotNetCoreCLI@2
    - 
      displayName: "Publish the project - $(buildConfiguration)"
      inputs: 
        arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
        command: publish
        projects: "**/*.csproj"
        publishWebProjects: false
        zipAfterPublish: true
      task: DotNetCoreCLI@2
    - 
      condition: succeeded()
      displayName: "Publish Artifact: drop"
      task: PublishBuildArtifacts@1
  trigger: 
    - "*"
  variables: 
    buildConfiguration: Release
    dotnetSdkVersion: "3.1.300"
    wwwrootDir: Tailspin.SpaceGame.Web/wwwroot